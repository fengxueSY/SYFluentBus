//
//  FBMyTicketViewController.m
//  FluentBus
//
//  Created by 666GPS on 2016/12/28.
//  Copyright © 2016年 yang. All rights reserved.
//

#import "FBMyTicketViewController.h"
#import "FBMyTicketCell.h"
#import "FBMyTicketDetailedViewController.h"
#import "FBMyTicketListModel.h"

@interface FBMyTicketViewController ()<FBMyTicketCellDelegate>

@property (nonatomic, assign) NSInteger page;
@property (nonatomic, assign) NSInteger totalPage;
@property (nonatomic, strong) NSMutableArray *modelArray;

@end

@implementation FBMyTicketViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self.liftButtonItem addTarget:self action:@selector(goBack) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]initWithCustomView:self.liftButtonItem];
    
    self.view.backgroundColor = UIColorFromRGB(0xF5F5F5);
    self.title = @"我的车票";
    [self creatBaseUI];
}

-(void)goBack{
    [self.navigationController popViewControllerAnimated:YES];
}

//布局tableView
-(void)creatBaseUI{
    self.tableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT) style:UITableViewStylePlain];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.tableView.rowHeight = 131;
    self.tableView.backgroundColor = backCommonlyUsedColor;
    [self.view addSubview:_tableView];
    
    
    WeakSelf(weakSelf);
    
    //头部刷新
    self.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        self.page = 1;
        
        [weakSelf getMyTicketListWithPage:1];
    }];
    
    //底部加载
    self.tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        if (self.modelArray.count < 20) {
            [MBProgressHUD showError:@"已经是最后一页了"];
            [self.tableView.mj_header endRefreshing];
            [self.tableView.mj_footer endRefreshing];
        }else{
            
            NSInteger b = self.modelArray.count % 20;
            if (b == 0) {
                [self getMyTicketListWithPage:self.page+1];
                self.page = self.page + 1;
                
            }else{
                [MBProgressHUD showError:@"已经是最后一页了"];
                [self.tableView.mj_header endRefreshing];
                [self.tableView.mj_footer endRefreshing];
            }
            
        }
    }];
    
    [self.tableView.mj_header beginRefreshing];
}

//网络请求车辆列表
- (void)getMyTicketListWithPage:(NSInteger)page
{
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    [dict setObject:@(page) forKey:@"PageIndex"];
    [dict setObject:@(20) forKey:@"PageSize"];
    
    [OCNetworkingTool POSTWithUrl:userTicketList() withParams:dict success:^(id responseObject) {
        
        DBLog("%@",[PublicMethod jsEncapsulateWithDictionary:(NSDictionary *)responseObject]);
        
        [self.tableView.mj_header endRefreshing];
        [self.tableView.mj_footer endRefreshing];
        
        if ([responseObject[@"code"] integerValue] == 200) {
            
            if (self.page ==1) {
                
                [self.modelArray removeAllObjects];
            }
            
            NSArray *dataArray = responseObject[@"data"];
            if (dataArray.count>0) {
                for (NSDictionary *dic in dataArray) {
                    FBMyTicketListModel *model = [FBMyTicketListModel new];
                    model.classId = dic[@"classId"];
                    model.orderId = dic[@"orderId"];
                    model.routeId = dic[@"routeId"];
                    model.productId = dic[@"productId"];
                    model.staName = dic[@"staName"];
                    model.endName = dic[@"endName"];
                    model.dateList = [dic objectForKey:@"dateList"];
                    NSString *timeStr = [NSString stringWithFormat:@"%@",dic[@"validDate"]];
                    if (timeStr.length >=10) {
                        timeStr = [timeStr substringToIndex:[timeStr length] - 3];
                    }
                    model.validDate = [self getTime:timeStr];
                    model.dayCount = [NSString stringWithFormat:@"%@",dic[@"dayCount"]];
                    model.time = dic[@"classTime"];
                    model.upStationName = dic[@"upStationName"];
//                    model.productType = [dic[@"productType"] integerValue];
                    model.productTypeName = dic[@"productTypeName"];
                    model.platNo = dic[@"platNo"];
                    model.ticket = dic[@"ticket"];
                    [self.modelArray addObject: model];
                }
                [self.tableView reloadData];
            }else{
                if (page == 1) {
                    [MBProgressHUD showError:@"暂无数据"];
                }else{
                    [MBProgressHUD showError:@"已经是最后一页了"];
                }
            }
            
        }else{
            [MBProgressHUD showError:@"获取车票列表失败！"];
        }
    } fail:^(NSError *error) {
        
        [self.tableView.mj_header endRefreshing];
        [self.tableView.mj_footer endRefreshing];
        [MBProgressHUD showError:@"获取车票列表失败！"];
    }];
}

#pragma mark - tableView代理

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.modelArray.count;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    FBMyTicketCell * cell = [FBMyTicketCell cellTableView:tableView];
    cell.delegate = self;
    FBMyTicketListModel *model = self.modelArray[indexPath.row];
    cell.model = model;
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    FBMyTicketDetailedViewController *detailedCtl = [[FBMyTicketDetailedViewController alloc]init];
    
    DBLog(@"%@--- %ld",self.modelArray,self.modelArray.count);
    FBMyTicketListModel *model = self.modelArray[indexPath.row];
    detailedCtl.model = model;
    [self.navigationController pushViewController:detailedCtl animated:YES];
}
#pragma mark -  显示日历
-(void)showCalendar:(NSArray *)calendarArray{
    
}
#pragma mark - 私有方法
//去掉毫秒后的时间
-(NSString *)getTime:(NSString *)time{
    NSDate  *localeDate = [NSDate dateWithTimeIntervalSince1970:[time integerValue]];
    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
    [dateFormatter setDateFormat:@"yyyy年MM月dd日"];
    [dateFormatter setTimeZone:[NSTimeZone localTimeZone]];
    NSString *strDate = [dateFormatter stringFromDate:localeDate];
    
    return strDate;
}

#pragma mark - 懒加载
- (NSMutableArray *)modelArray
{
    if (_modelArray == nil) {
        _modelArray = [NSMutableArray array];
    }
    return _modelArray;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end
