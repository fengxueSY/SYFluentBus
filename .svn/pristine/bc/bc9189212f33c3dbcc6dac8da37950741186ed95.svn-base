//
//  FBTopUpCardViewController.m
//  FluentBus
//
//  Created by 666GPS on 2016/12/31.
//  Copyright © 2016年 yang. All rights reserved.
//token + @ + 时间戳

#import "FBTopUpCardViewController.h"
#import "FBTopUpViewController.h"
#import "CRSA.h"
#import "Base64.h"
#import "MyMD5.h"
#import "NSString+RSA.h"

@interface FBTopUpCardViewController (){
    NSString * balanceStr;/**<余额，单位：分*/
    NSString * forzenStr;/**<冻结金额，单位：分*/
    
    NSTimer *_timer;//定时器 刷二维码
    NSInteger _second;
}
@property (weak, nonatomic) IBOutlet UIView *backView;
@property (weak, nonatomic) IBOutlet UIImageView *disImageView;
@property (weak, nonatomic) IBOutlet UIButton *topUpButton;
@property (nonatomic,strong) UILabel * moneyLabel;
@property (nonatomic,strong) UIButton * eyeButton;
@property (nonatomic) BOOL isShow;
@property (nonatomic,strong) NSString * moneyNumber;
- (IBAction)topUpButtonAction:(id)sender;
@property (weak, nonatomic) IBOutlet UIButton *toUpBut;

@end

@implementation FBTopUpCardViewController

- (void)dealloc
{
    _timer = nil;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(willEndBackGround) name:UIApplicationWillResignActiveNotification object:nil];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(willEnterForeground) name:UIApplicationDidBecomeActiveNotification object:nil];
    self.title = @"储值卡";
    [self httpsData];
    _isShow = YES;
    [_toUpBut.layer setMasksToBounds:YES];
    [_toUpBut.layer setCornerRadius:5];
    [self.liftButtonItem addTarget:self action:@selector(goBcke) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]initWithCustomView:self.liftButtonItem];
    [_topUpButton.layer setMasksToBounds:YES];
    [_topUpButton.layer setCornerRadius:5];
    [self eyeButtonAction];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    //加密后生成二维码
    [self getSecret];
    
    if (_timer) {
        [_timer fire];
    } else {
        _timer = [NSTimer scheduledTimerWithTimeInterval:60 target:self selector:@selector(getSecret) userInfo:nil repeats:YES];
    }
}

#pragma mark - 推入后台方法

- (void)willEndBackGround{
    
    [_timer invalidate];
    _timer = nil;
}

#pragma mark - 推入前台

- (void)willEnterForeground{
    //加密后生成二维码
    [self getSecret];
    
    if (_timer) {
        [_timer fire];
    } else {
        _timer = [NSTimer scheduledTimerWithTimeInterval:60 target:self selector:@selector(getSecret) userInfo:nil repeats:YES];
    }
    
}


-(void)eyeButtonAction{
    if (_isShow == NO) {
        _isShow = YES;
        [self.eyeButton setImage:UIImageName(@"deposit_card_gray") forState:UIControlStateNormal];
        NSString * numberStr1 = @"*****";
        float moneyW = [PublicMethod handelWideContent:numberStr1 AndFontsize:16 AndMaxsize:CGSizeMake(10000, 46)];
        float labelX = (SCREEN_WIDTH - moneyW - 20) / 2;
        self.moneyLabel.text = numberStr1;
        self.moneyLabel.textColor = UIColorFromRGB(0x777777);
        self.moneyLabel.frame = CGRectMake(labelX, 67, moneyW, 40);
        self.eyeButton.frame = CGRectMake(Max_X(_moneyLabel) + 6, 79, 16, 16);
    }else{
        _isShow = NO;
        [self.eyeButton setImage:UIImageName(@"deposit_card") forState:UIControlStateNormal];
        float moneyW = [PublicMethod handelWideContent:balanceStr AndFontsize:16 AndMaxsize:CGSizeMake(10000, 46)];
        float labelX = (SCREEN_WIDTH - moneyW - 20) / 2;
        self.moneyLabel.text = balanceStr;
        _moneyLabel.textColor = greenUnifyColor;
        self.moneyLabel.frame = CGRectMake(labelX, 67, moneyW, 40);
        self.eyeButton.frame = CGRectMake(Max_X(_moneyLabel) + 6, 79, 16, 16);
    }
}
-(UILabel *)moneyLabel{
    if (!_moneyLabel) {
        _moneyLabel = [[UILabel alloc]init];
        _moneyLabel.textAlignment = NSTextAlignmentRight;
        _moneyLabel.font = FONT(16);
        _moneyLabel.text = @"0.00";
        [self.view addSubview:_moneyLabel];
    }
    return _moneyLabel;
}
-(UIButton *)eyeButton{
    if (!_eyeButton) {
        _eyeButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [_eyeButton setImage:UIImageName(@"deposit_card") forState:UIControlStateNormal];
        [_eyeButton addTarget:self action:@selector(eyeButtonAction) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:_eyeButton];
    }
    return _eyeButton;
}
-(void)httpsData{
    [OCNetworkingTool POSTWithUrl:walletQueryfast() withParams:nil success:^(id responseObject) {
        NSDictionary * dic = (NSDictionary *)responseObject;
        NSDictionary * dataDic = [dic objectForKey:@"data"];
        balanceStr = [NSString stringWithFormat:@"%.2f",[[dataDic objectForKey:@"balance"] floatValue] / 100];
        forzenStr = [NSString stringWithFormat:@"%.2f",[[dataDic objectForKey:@"forzen"] floatValue] / 100];
        _moneyLabel.text = balanceStr;
    } fail:^(NSError *error) {
        
    }];
}

-(void)goBcke{
    [self.navigationController popViewControllerAnimated:YES];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
- (IBAction)topUpButtonAction:(id)sender {
    FBTopUpViewController * topUp = [[FBTopUpViewController alloc]init];
    [self.navigationController pushViewController:topUp animated:YES];
}


#pragma mark -  加密
//拿到膜和指数，并进行加密
-(void)getSecret
{
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    
    [dict setValue:[UserInfo userInfoWithUserDefaults].userName forKey:@"UserName"];
    [OCNetworkingTool POSTWithUrl:getLoginKey() withParams:dict success:^(id responseObject) {
        
        DBLog(@"%@",responseObject);
        NSDictionary *data =responseObject[@"data"];
        NSString *secret = data[@"secret"];
        NSArray *temp=[secret componentsSeparatedByString:@"-"];
        NSLog(@"%@,%@",temp[0],temp[1]);
        
        //获取当前时间戳
        NSDate *currentDate = [PublicMethod getLocalCurrentDate];
        long currentSeconds = [PublicMethod getSecondsWithDate:currentDate];
        NSString *mycurrentSeconds = [NSString stringWithFormat:@"%ld000",currentSeconds];
        
        NSString *rsaStr = [NSString stringWithFormat:@"%@@%@",[UserInfo userInfoWithUserDefaults].userTokenId,mycurrentSeconds];
        NSLog(@"%@",rsaStr);
        
        NSString *RSAString =  [NSString setPublicKey:[rsaStr UTF8String] Mod:[temp[1] UTF8String] Exp:[temp[0] UTF8String]];
        
        self.disImageView.image = [self generateQrCodeWithInfo:RSAString];
        
    } fail:^(NSError *error) {
        [MBProgressHUD hideHUD];
        [MBProgressHUD showError:@"获取二维码失败，请检查网络"];
    }];
}

#pragma mark - 生产二维码
- (UIImage *)generateQrCodeWithInfo:(NSString *)info {
    // 创建滤镜
    CIFilter *filter = [CIFilter filterWithName:@"CIQRCodeGenerator"];
    [filter setDefaults];
    
    NSData *qrcodeData = [info dataUsingEncoding:NSUTF8StringEncoding];
    // 设置数据
    [filter setValue:qrcodeData forKey:@"inputMessage"];
    CIImage *outputImage = filter.outputImage;
    UIImage *qrCodeImage = [self scaleImage:outputImage];
    if (qrCodeImage == nil) {
        return nil;
    }
    return qrCodeImage;
}

- (UIImage *)scaleImage:(CIImage *)ciImage {
    // 创建放大的系数
    CGAffineTransform transform = CGAffineTransformMakeScale(5, 5);
    // 根据放大系数放大图片
    CIImage *newImage = [ciImage imageByApplyingTransform:transform];
    
    return [UIImage imageWithCIImage:newImage];
}
@end
